
// This file is generated by the Snaplet CLI
export type JsonPrimitive = null | number | string | boolean

export type NestedArray<V> = Array<V | NestedArray<V>>

export type Nested<V> = V | { [s: string]: V | Nested<V> } | Array<V | Nested<V>>

export type Json = Nested<JsonPrimitive>

export type Structure = {
  $schemas: ["public", "pgtle", "vault", "pgsodium_masks", "pgsodium", "graphql", "graphql_public", "realtime", "auth", "storage", "extensions"],
  "public": {
  $tables: ["_prisma_migrations", "Pokemon", "Vote"],
  "_prisma_migrations": {
  $columns: ["applied_steps_count", "checksum", "finished_at", "id", "logs", "migration_name", "rolled_back_at", "started_at"],
  "applied_steps_count": {
  default: "0",
  nullable: false,
  type: "int4",
},
"checksum": {
  default: null,
  nullable: false,
  type: "varchar",
},
"finished_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"id": {
  default: null,
  nullable: false,
  type: "varchar",
},
"logs": {
  default: null,
  nullable: true,
  type: "text",
},
"migration_name": {
  default: null,
  nullable: false,
  type: "varchar",
},
"rolled_back_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"started_at": {
  default: "now()",
  nullable: false,
  type: "timestamptz",
},
},
"Pokemon": {
  $columns: ["id", "name", "spriteUrl"],
  "id": {
  default: null,
  nullable: false,
  type: "int4",
},
"name": {
  default: null,
  nullable: false,
  type: "text",
},
"spriteUrl": {
  default: null,
  nullable: false,
  type: "text",
},
},
"Vote": {
  $columns: ["createdAt", "id", "votedAgainstId", "votedForId"],
  "createdAt": {
  default: "CURRENT_TIMESTAMP",
  nullable: false,
  type: "timestamp",
},
"id": {
  default: null,
  nullable: false,
  type: "text",
},
"votedAgainstId": {
  default: null,
  nullable: false,
  type: "int4",
},
"votedForId": {
  default: null,
  nullable: false,
  type: "int4",
},
},
},
"pgtle": {
  $tables: [],
  
},
"vault": {
  $tables: ["secrets"],
  "secrets": {
  $columns: ["created_at", "description", "id", "key_id", "name", "nonce", "secret", "updated_at"],
  "created_at": {
  default: "CURRENT_TIMESTAMP",
  nullable: false,
  type: "timestamptz",
},
"description": {
  default: "''::text",
  nullable: false,
  type: "text",
},
"id": {
  default: "gen_random_uuid()",
  nullable: false,
  type: "uuid",
},
"key_id": {
  default: "(pgsodium.create_key()).id",
  nullable: true,
  type: "uuid",
},
"name": {
  default: null,
  nullable: true,
  type: "text",
},
"nonce": {
  default: "pgsodium.crypto_aead_det_noncegen()",
  nullable: true,
  type: "bytea",
},
"secret": {
  default: null,
  nullable: false,
  type: "text",
},
"updated_at": {
  default: "CURRENT_TIMESTAMP",
  nullable: false,
  type: "timestamptz",
},
},
},
"pgsodium_masks": {
  $tables: [],
  
},
"pgsodium": {
  $tables: ["key"],
  "key": {
  $columns: ["associated_data", "comment", "created", "expires", "id", "key_context", "key_id", "key_type", "name", "parent_key", "raw_key", "raw_key_nonce", "status", "user_data"],
  "associated_data": {
  default: "'associated'::text",
  nullable: true,
  type: "text",
},
"comment": {
  default: null,
  nullable: true,
  type: "text",
},
"created": {
  default: "CURRENT_TIMESTAMP",
  nullable: false,
  type: "timestamptz",
},
"expires": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"id": {
  default: "gen_random_uuid()",
  nullable: false,
  type: "uuid",
},
"key_context": {
  default: "'\x7067736f6469756d'::bytea",
  nullable: true,
  type: "bytea",
},
"key_id": {
  default: "nextval('pgsodium.key_key_id_seq'::regclass)",
  nullable: true,
  type: "int8",
},
"key_type": {
  default: null,
  nullable: true,
  type: "key_type",
},
"name": {
  default: null,
  nullable: true,
  type: "text",
},
"parent_key": {
  default: null,
  nullable: true,
  type: "uuid",
},
"raw_key": {
  default: null,
  nullable: true,
  type: "bytea",
},
"raw_key_nonce": {
  default: null,
  nullable: true,
  type: "bytea",
},
"status": {
  default: "'valid'::pgsodium.key_status",
  nullable: true,
  type: "key_status",
},
"user_data": {
  default: null,
  nullable: true,
  type: "text",
},
},
},
"graphql": {
  $tables: [],
  
},
"graphql_public": {
  $tables: [],
  
},
"realtime": {
  $tables: [],
  
},
"auth": {
  $tables: ["audit_log_entries", "flow_state", "identities", "instances", "mfa_amr_claims", "mfa_challenges", "mfa_factors", "refresh_tokens", "saml_providers", "saml_relay_states", "schema_migrations", "sessions", "sso_domains", "sso_providers", "users"],
  "audit_log_entries": {
  $columns: ["created_at", "id", "instance_id", "ip_address", "payload"],
  "created_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"id": {
  default: null,
  nullable: false,
  type: "uuid",
},
"instance_id": {
  default: null,
  nullable: true,
  type: "uuid",
},
"ip_address": {
  default: "''::character varying",
  nullable: false,
  type: "varchar",
},
"payload": {
  default: null,
  nullable: true,
  type: "json",
},
},
"flow_state": {
  $columns: ["auth_code", "authentication_method", "code_challenge", "code_challenge_method", "created_at", "id", "provider_access_token", "provider_refresh_token", "provider_type", "updated_at", "user_id"],
  "auth_code": {
  default: null,
  nullable: false,
  type: "text",
},
"authentication_method": {
  default: null,
  nullable: false,
  type: "text",
},
"code_challenge": {
  default: null,
  nullable: false,
  type: "text",
},
"code_challenge_method": {
  default: null,
  nullable: false,
  type: "code_challenge_method",
},
"created_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"id": {
  default: null,
  nullable: false,
  type: "uuid",
},
"provider_access_token": {
  default: null,
  nullable: true,
  type: "text",
},
"provider_refresh_token": {
  default: null,
  nullable: true,
  type: "text",
},
"provider_type": {
  default: null,
  nullable: false,
  type: "text",
},
"updated_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"user_id": {
  default: null,
  nullable: true,
  type: "uuid",
},
},
"identities": {
  $columns: ["created_at", "email", "id", "identity_data", "last_sign_in_at", "provider", "updated_at", "user_id"],
  "created_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"email": {
  default: null,
  nullable: true,
  type: "text",
},
"id": {
  default: null,
  nullable: false,
  type: "text",
},
"identity_data": {
  default: null,
  nullable: false,
  type: "jsonb",
},
"last_sign_in_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"provider": {
  default: null,
  nullable: false,
  type: "text",
},
"updated_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"user_id": {
  default: null,
  nullable: false,
  type: "uuid",
},
},
"instances": {
  $columns: ["created_at", "id", "raw_base_config", "updated_at", "uuid"],
  "created_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"id": {
  default: null,
  nullable: false,
  type: "uuid",
},
"raw_base_config": {
  default: null,
  nullable: true,
  type: "text",
},
"updated_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"uuid": {
  default: null,
  nullable: true,
  type: "uuid",
},
},
"mfa_amr_claims": {
  $columns: ["authentication_method", "created_at", "id", "session_id", "updated_at"],
  "authentication_method": {
  default: null,
  nullable: false,
  type: "text",
},
"created_at": {
  default: null,
  nullable: false,
  type: "timestamptz",
},
"id": {
  default: null,
  nullable: false,
  type: "uuid",
},
"session_id": {
  default: null,
  nullable: false,
  type: "uuid",
},
"updated_at": {
  default: null,
  nullable: false,
  type: "timestamptz",
},
},
"mfa_challenges": {
  $columns: ["created_at", "factor_id", "id", "ip_address", "verified_at"],
  "created_at": {
  default: null,
  nullable: false,
  type: "timestamptz",
},
"factor_id": {
  default: null,
  nullable: false,
  type: "uuid",
},
"id": {
  default: null,
  nullable: false,
  type: "uuid",
},
"ip_address": {
  default: null,
  nullable: false,
  type: "inet",
},
"verified_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
},
"mfa_factors": {
  $columns: ["created_at", "factor_type", "friendly_name", "id", "secret", "status", "updated_at", "user_id"],
  "created_at": {
  default: null,
  nullable: false,
  type: "timestamptz",
},
"factor_type": {
  default: null,
  nullable: false,
  type: "factor_type",
},
"friendly_name": {
  default: null,
  nullable: true,
  type: "text",
},
"id": {
  default: null,
  nullable: false,
  type: "uuid",
},
"secret": {
  default: null,
  nullable: true,
  type: "text",
},
"status": {
  default: null,
  nullable: false,
  type: "factor_status",
},
"updated_at": {
  default: null,
  nullable: false,
  type: "timestamptz",
},
"user_id": {
  default: null,
  nullable: false,
  type: "uuid",
},
},
"refresh_tokens": {
  $columns: ["created_at", "id", "instance_id", "parent", "revoked", "session_id", "token", "updated_at", "user_id"],
  "created_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"id": {
  default: "nextval('auth.refresh_tokens_id_seq'::regclass)",
  nullable: false,
  type: "int8",
},
"instance_id": {
  default: null,
  nullable: true,
  type: "uuid",
},
"parent": {
  default: null,
  nullable: true,
  type: "varchar",
},
"revoked": {
  default: null,
  nullable: true,
  type: "bool",
},
"session_id": {
  default: null,
  nullable: true,
  type: "uuid",
},
"token": {
  default: null,
  nullable: true,
  type: "varchar",
},
"updated_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"user_id": {
  default: null,
  nullable: true,
  type: "varchar",
},
},
"saml_providers": {
  $columns: ["attribute_mapping", "created_at", "entity_id", "id", "metadata_url", "metadata_xml", "sso_provider_id", "updated_at"],
  "attribute_mapping": {
  default: null,
  nullable: true,
  type: "jsonb",
},
"created_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"entity_id": {
  default: null,
  nullable: false,
  type: "text",
},
"id": {
  default: null,
  nullable: false,
  type: "uuid",
},
"metadata_url": {
  default: null,
  nullable: true,
  type: "text",
},
"metadata_xml": {
  default: null,
  nullable: false,
  type: "text",
},
"sso_provider_id": {
  default: null,
  nullable: false,
  type: "uuid",
},
"updated_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
},
"saml_relay_states": {
  $columns: ["created_at", "for_email", "from_ip_address", "id", "redirect_to", "request_id", "sso_provider_id", "updated_at"],
  "created_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"for_email": {
  default: null,
  nullable: true,
  type: "text",
},
"from_ip_address": {
  default: null,
  nullable: true,
  type: "inet",
},
"id": {
  default: null,
  nullable: false,
  type: "uuid",
},
"redirect_to": {
  default: null,
  nullable: true,
  type: "text",
},
"request_id": {
  default: null,
  nullable: false,
  type: "text",
},
"sso_provider_id": {
  default: null,
  nullable: false,
  type: "uuid",
},
"updated_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
},
"schema_migrations": {
  $columns: ["version"],
  "version": {
  default: null,
  nullable: false,
  type: "varchar",
},
},
"sessions": {
  $columns: ["aal", "created_at", "factor_id", "id", "not_after", "updated_at", "user_id"],
  "aal": {
  default: null,
  nullable: true,
  type: "aal_level",
},
"created_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"factor_id": {
  default: null,
  nullable: true,
  type: "uuid",
},
"id": {
  default: null,
  nullable: false,
  type: "uuid",
},
"not_after": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"updated_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"user_id": {
  default: null,
  nullable: false,
  type: "uuid",
},
},
"sso_domains": {
  $columns: ["created_at", "domain", "id", "sso_provider_id", "updated_at"],
  "created_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"domain": {
  default: null,
  nullable: false,
  type: "text",
},
"id": {
  default: null,
  nullable: false,
  type: "uuid",
},
"sso_provider_id": {
  default: null,
  nullable: false,
  type: "uuid",
},
"updated_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
},
"sso_providers": {
  $columns: ["created_at", "id", "resource_id", "updated_at"],
  "created_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"id": {
  default: null,
  nullable: false,
  type: "uuid",
},
"resource_id": {
  default: null,
  nullable: true,
  type: "text",
},
"updated_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
},
"users": {
  $columns: ["aud", "banned_until", "confirmation_sent_at", "confirmation_token", "confirmed_at", "created_at", "deleted_at", "email", "email_change", "email_change_confirm_status", "email_change_sent_at", "email_change_token_current", "email_change_token_new", "email_confirmed_at", "encrypted_password", "id", "instance_id", "invited_at", "is_sso_user", "is_super_admin", "last_sign_in_at", "phone", "phone_change", "phone_change_sent_at", "phone_change_token", "phone_confirmed_at", "raw_app_meta_data", "raw_user_meta_data", "reauthentication_sent_at", "reauthentication_token", "recovery_sent_at", "recovery_token", "role", "updated_at"],
  "aud": {
  default: null,
  nullable: true,
  type: "varchar",
},
"banned_until": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"confirmation_sent_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"confirmation_token": {
  default: null,
  nullable: true,
  type: "varchar",
},
"confirmed_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"created_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"deleted_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"email": {
  default: null,
  nullable: true,
  type: "varchar",
},
"email_change": {
  default: null,
  nullable: true,
  type: "varchar",
},
"email_change_confirm_status": {
  default: "0",
  nullable: true,
  type: "int2",
},
"email_change_sent_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"email_change_token_current": {
  default: "''::character varying",
  nullable: true,
  type: "varchar",
},
"email_change_token_new": {
  default: null,
  nullable: true,
  type: "varchar",
},
"email_confirmed_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"encrypted_password": {
  default: null,
  nullable: true,
  type: "varchar",
},
"id": {
  default: null,
  nullable: false,
  type: "uuid",
},
"instance_id": {
  default: null,
  nullable: true,
  type: "uuid",
},
"invited_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"is_sso_user": {
  default: "false",
  nullable: false,
  type: "bool",
},
"is_super_admin": {
  default: null,
  nullable: true,
  type: "bool",
},
"last_sign_in_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"phone": {
  default: "NULL::character varying",
  nullable: true,
  type: "text",
},
"phone_change": {
  default: "''::character varying",
  nullable: true,
  type: "text",
},
"phone_change_sent_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"phone_change_token": {
  default: "''::character varying",
  nullable: true,
  type: "varchar",
},
"phone_confirmed_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"raw_app_meta_data": {
  default: null,
  nullable: true,
  type: "jsonb",
},
"raw_user_meta_data": {
  default: null,
  nullable: true,
  type: "jsonb",
},
"reauthentication_sent_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"reauthentication_token": {
  default: "''::character varying",
  nullable: true,
  type: "varchar",
},
"recovery_sent_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"recovery_token": {
  default: null,
  nullable: true,
  type: "varchar",
},
"role": {
  default: null,
  nullable: true,
  type: "varchar",
},
"updated_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
},
},
"storage": {
  $tables: ["buckets", "migrations", "objects"],
  "buckets": {
  $columns: ["allowed_mime_types", "avif_autodetection", "created_at", "file_size_limit", "id", "name", "owner", "public", "updated_at"],
  "allowed_mime_types": {
  default: null,
  nullable: true,
  type: "_text",
},
"avif_autodetection": {
  default: "false",
  nullable: true,
  type: "bool",
},
"created_at": {
  default: "now()",
  nullable: true,
  type: "timestamptz",
},
"file_size_limit": {
  default: null,
  nullable: true,
  type: "int8",
},
"id": {
  default: null,
  nullable: false,
  type: "text",
},
"name": {
  default: null,
  nullable: false,
  type: "text",
},
"owner": {
  default: null,
  nullable: true,
  type: "uuid",
},
"public": {
  default: "false",
  nullable: true,
  type: "bool",
},
"updated_at": {
  default: "now()",
  nullable: true,
  type: "timestamptz",
},
},
"migrations": {
  $columns: ["executed_at", "hash", "id", "name"],
  "executed_at": {
  default: "CURRENT_TIMESTAMP",
  nullable: true,
  type: "timestamp",
},
"hash": {
  default: null,
  nullable: false,
  type: "varchar",
},
"id": {
  default: null,
  nullable: false,
  type: "int4",
},
"name": {
  default: null,
  nullable: false,
  type: "varchar",
},
},
"objects": {
  $columns: ["bucket_id", "created_at", "id", "last_accessed_at", "metadata", "name", "owner", "path_tokens", "updated_at", "version"],
  "bucket_id": {
  default: null,
  nullable: true,
  type: "text",
},
"created_at": {
  default: "now()",
  nullable: true,
  type: "timestamptz",
},
"id": {
  default: "uuid_generate_v4()",
  nullable: false,
  type: "uuid",
},
"last_accessed_at": {
  default: "now()",
  nullable: true,
  type: "timestamptz",
},
"metadata": {
  default: null,
  nullable: true,
  type: "jsonb",
},
"name": {
  default: null,
  nullable: true,
  type: "text",
},
"owner": {
  default: null,
  nullable: true,
  type: "uuid",
},
"path_tokens": {
  default: null,
  nullable: true,
  type: "_text",
},
"updated_at": {
  default: "now()",
  nullable: true,
  type: "timestamptz",
},
"version": {
  default: null,
  nullable: true,
  type: "text",
},
},
},
"extensions": {
  $tables: [],
  
},
}

type Enum_pgsodium_key_status = 'expired' | 'invalid' | 'valid' | 'default'
type Enum_auth_factor_status = 'verified' | 'unverified'
type Enum_auth_factor_type = 'webauthn' | 'totp'
type Enum_auth_code_challenge_method = 'plain' | 's256'
type Enum_pgsodium_key_type = 'stream_xchacha20' | 'secretstream' | 'secretbox' | 'kdf' | 'generichash' | 'shorthash' | 'auth' | 'hmacsha256' | 'hmacsha512' | 'aead-det' | 'aead-ietf'
type Enum_auth_aal_level = 'aal3' | 'aal2' | 'aal1'

interface Table_public_prisma_migrations {
  "applied_steps_count": number
  "checksum": string
  "finished_at": Date
  "id": string
  "logs": string
  "migration_name": string
  "rolled_back_at": Date
  "started_at": Date
}
interface Table_auth_audit_log_entries {
  "created_at": Date
  "id": string
  "instance_id": string
  "ip_address": string
  "payload": Json
}
interface Table_storage_buckets {
  "allowed_mime_types": NestedArray<string>
  "avif_autodetection": boolean
  "created_at": Date
  "file_size_limit": number
  "id": string
  "name": string
  "owner": string
  "public": boolean
  "updated_at": Date
}
interface Table_auth_flow_state {
  "auth_code": string
  "authentication_method": string
  "code_challenge": string
  "code_challenge_method": Enum_auth_code_challenge_method
  "created_at": Date
  "id": string
  "provider_access_token": string
  "provider_refresh_token": string
  "provider_type": string
  "updated_at": Date
  "user_id": string
}
interface Table_auth_identities {
  "created_at": Date
  "email": string
  "id": string
  "identity_data": Json
  "last_sign_in_at": Date
  "provider": string
  "updated_at": Date
  "user_id": string
}
interface Table_auth_instances {
  "created_at": Date
  "id": string
  "raw_base_config": string
  "updated_at": Date
  "uuid": string
}
interface Table_pgsodium_key {
  "associated_data": string
  "comment": string
  "created": Date
  "expires": Date
  "id": string
  "key_context": string
  "key_id": number
  "key_type": Enum_pgsodium_key_type
  "name": string
  "parent_key": string
  "raw_key": string
  "raw_key_nonce": string
  "status": Enum_pgsodium_key_status
  "user_data": string
}
interface Table_auth_mfa_amr_claims {
  "authentication_method": string
  "created_at": Date
  "id": string
  "session_id": string
  "updated_at": Date
}
interface Table_auth_mfa_challenges {
  "created_at": Date
  "factor_id": string
  "id": string
  "ip_address": string
  "verified_at": Date
}
interface Table_auth_mfa_factors {
  "created_at": Date
  "factor_type": Enum_auth_factor_type
  "friendly_name": string
  "id": string
  "secret": string
  "status": Enum_auth_factor_status
  "updated_at": Date
  "user_id": string
}
interface Table_storage_migrations {
  "executed_at": Date
  "hash": string
  "id": number
  "name": string
}
interface Table_storage_objects {
  "bucket_id": string
  "created_at": Date
  "id": string
  "last_accessed_at": Date
  "metadata": Json
  "name": string
  "owner": string
  "path_tokens": NestedArray<string>
  "updated_at": Date
  "version": string
}
interface Table_public_pokemon {
  "id": number
  "name": string
  "spriteUrl": string
}
interface Table_auth_refresh_tokens {
  "created_at": Date
  "id": number
  "instance_id": string
  "parent": string
  "revoked": boolean
  "session_id": string
  "token": string
  "updated_at": Date
  "user_id": string
}
interface Table_auth_saml_providers {
  "attribute_mapping": Json
  "created_at": Date
  "entity_id": string
  "id": string
  "metadata_url": string
  "metadata_xml": string
  "sso_provider_id": string
  "updated_at": Date
}
interface Table_auth_saml_relay_states {
  "created_at": Date
  "for_email": string
  "from_ip_address": string
  "id": string
  "redirect_to": string
  "request_id": string
  "sso_provider_id": string
  "updated_at": Date
}
interface Table_auth_schema_migrations {
  "version": string
}
interface Table_vault_secrets {
  "created_at": Date
  "description": string
  "id": string
  "key_id": string
  "name": string
  "nonce": string
  "secret": string
  "updated_at": Date
}
interface Table_auth_sessions {
  "aal": Enum_auth_aal_level
  "created_at": Date
  "factor_id": string
  "id": string
  "not_after": Date
  "updated_at": Date
  "user_id": string
}
interface Table_auth_sso_domains {
  "created_at": Date
  "domain": string
  "id": string
  "sso_provider_id": string
  "updated_at": Date
}
interface Table_auth_sso_providers {
  "created_at": Date
  "id": string
  "resource_id": string
  "updated_at": Date
}
interface Table_auth_users {
  "aud": string
  "banned_until": Date
  "confirmation_sent_at": Date
  "confirmation_token": string
  "confirmed_at": Date
  "created_at": Date
  "deleted_at": Date
  "email": string
  "email_change": string
  "email_change_confirm_status": number
  "email_change_sent_at": Date
  "email_change_token_current": string
  "email_change_token_new": string
  "email_confirmed_at": Date
  "encrypted_password": string
  "id": string
  "instance_id": string
  "invited_at": Date
  "is_sso_user": boolean
  "is_super_admin": boolean
  "last_sign_in_at": Date
  "phone": string
  "phone_change": string
  "phone_change_sent_at": Date
  "phone_change_token": string
  "phone_confirmed_at": Date
  "raw_app_meta_data": Json
  "raw_user_meta_data": Json
  "reauthentication_sent_at": Date
  "reauthentication_token": string
  "recovery_sent_at": Date
  "recovery_token": string
  "role": string
  "updated_at": Date
}
interface Table_public_vote {
  "createdAt": Date
  "id": string
  "votedAgainstId": number
  "votedForId": number
}

interface Schema_public {
  "_prisma_migrations": false | ((ctx: { row: Table_public_prisma_migrations, rowIndex: number }) => Partial<Table_public_prisma_migrations>)
  "Pokemon": false | ((ctx: { row: Table_public_pokemon, rowIndex: number }) => Partial<Table_public_pokemon>)
  "Vote": false | ((ctx: { row: Table_public_vote, rowIndex: number }) => Partial<Table_public_vote>)
}
interface Schema_pgtle {

}
interface Schema_vault {
  "secrets": false | ((ctx: { row: Table_vault_secrets, rowIndex: number }) => Partial<Table_vault_secrets>)
}
interface Schema_pgsodium_masks {

}
interface Schema_pgsodium {
  "key": false | ((ctx: { row: Table_pgsodium_key, rowIndex: number }) => Partial<Table_pgsodium_key>)
}
interface Schema_graphql {

}
interface Schema_graphql_public {

}
interface Schema_realtime {

}
interface Schema_auth {
  "audit_log_entries": false | ((ctx: { row: Table_auth_audit_log_entries, rowIndex: number }) => Partial<Table_auth_audit_log_entries>)
  "flow_state": false | ((ctx: { row: Table_auth_flow_state, rowIndex: number }) => Partial<Table_auth_flow_state>)
  "identities": false | ((ctx: { row: Table_auth_identities, rowIndex: number }) => Partial<Table_auth_identities>)
  "instances": false | ((ctx: { row: Table_auth_instances, rowIndex: number }) => Partial<Table_auth_instances>)
  "mfa_amr_claims": false | ((ctx: { row: Table_auth_mfa_amr_claims, rowIndex: number }) => Partial<Table_auth_mfa_amr_claims>)
  "mfa_challenges": false | ((ctx: { row: Table_auth_mfa_challenges, rowIndex: number }) => Partial<Table_auth_mfa_challenges>)
  "mfa_factors": false | ((ctx: { row: Table_auth_mfa_factors, rowIndex: number }) => Partial<Table_auth_mfa_factors>)
  "refresh_tokens": false | ((ctx: { row: Table_auth_refresh_tokens, rowIndex: number }) => Partial<Table_auth_refresh_tokens>)
  "saml_providers": false | ((ctx: { row: Table_auth_saml_providers, rowIndex: number }) => Partial<Table_auth_saml_providers>)
  "saml_relay_states": false | ((ctx: { row: Table_auth_saml_relay_states, rowIndex: number }) => Partial<Table_auth_saml_relay_states>)
  "schema_migrations": false | ((ctx: { row: Table_auth_schema_migrations, rowIndex: number }) => Partial<Table_auth_schema_migrations>)
  "sessions": false | ((ctx: { row: Table_auth_sessions, rowIndex: number }) => Partial<Table_auth_sessions>)
  "sso_domains": false | ((ctx: { row: Table_auth_sso_domains, rowIndex: number }) => Partial<Table_auth_sso_domains>)
  "sso_providers": false | ((ctx: { row: Table_auth_sso_providers, rowIndex: number }) => Partial<Table_auth_sso_providers>)
  "users": false | ((ctx: { row: Table_auth_users, rowIndex: number }) => Partial<Table_auth_users>)
}
interface Schema_storage {
  "buckets": false | ((ctx: { row: Table_storage_buckets, rowIndex: number }) => Partial<Table_storage_buckets>)
  "migrations": false | ((ctx: { row: Table_storage_migrations, rowIndex: number }) => Partial<Table_storage_migrations>)
  "objects": false | ((ctx: { row: Table_storage_objects, rowIndex: number }) => Partial<Table_storage_objects>)
}
interface Schema_extensions {

}

export interface Database {
  "public": Partial<Schema_public>
  "pgtle": Partial<Schema_pgtle>
  "vault": Partial<Schema_vault>
  "pgsodium_masks": Partial<Schema_pgsodium_masks>
  "pgsodium": Partial<Schema_pgsodium>
  "graphql": Partial<Schema_graphql>
  "graphql_public": Partial<Schema_graphql_public>
  "realtime": Partial<Schema_realtime>
  "auth": Partial<Schema_auth>
  "storage": Partial<Schema_storage>
  "extensions": Partial<Schema_extensions>
}

export type TransformContext = {
  structure: Structure;
}

export interface TransformOptions {
  mode?: 'auto' | 'strict' | 'unsafe'
  parseJson?: boolean
}

export type TransformConfig = { $options?: TransformOptions } & Partial<Database>

export type Transform = (ctx: TransformContext) => (TransformConfig | Promise<TransformConfig>)
